@page "/psl-schedule"
@using CricketVerse.Services
@inject LanguageService LanguageService

<div class="container mt-4">
    <div class="content-card">
        <h2 class="mb-4">
            <i class="fas fa-calendar text-primary me-2"></i>
            @LanguageService.GetTranslation("PSLSchedule")
        </h2>

        <!-- Match Categories -->
        <ul class="nav nav-pills mb-4">
            <li class="nav-item">
                <button class="nav-link @(selectedCategory == "upcoming" ? "active" : "")"
                        @onclick="@(() => selectedCategory = "upcoming")">
                    @LanguageService.GetTranslation("UpcomingMatches")
                </button>
            </li>
            <li class="nav-item">
                <button class="nav-link @(selectedCategory == "live" ? "active" : "")"
                        @onclick="@(() => selectedCategory = "live")">
                    @LanguageService.GetTranslation("LiveMatches")
                </button>
            </li>
            <li class="nav-item">
                <button class="nav-link @(selectedCategory == "completed" ? "active" : "")"
                        @onclick="@(() => selectedCategory = "completed")">
                    @LanguageService.GetTranslation("CompletedMatches")
                </button>
            </li>
        </ul>

        <!-- Match List -->
        <div class="row g-4">
            @foreach (var match in GetFilteredMatches())
            {
                <div class="col-md-6">
                    <div class="card match-card hover-scale">
                        <div class="card-body">
                            <div class="d-flex justify-content-between align-items-center mb-3">
                                <span class="badge @GetStatusBadgeClass(match.Status)">@match.Status</span>
                                <small class="text-muted">@match.DateTime.ToString("MMM dd, yyyy HH:mm")</small>
                            </div>
                            
                            <div class="d-flex justify-content-between align-items-center">
                                <div class="team-info text-center">
                                    <i class="fas fa-shield-alt fa-3x text-primary team-icon mb-2"></i>
                                    <h6 class="mb-0">@match.Team1</h6>
                                    @if (match.Status != "Upcoming")
                                    {
                                        <strong class="score">@match.Team1Score</strong>
                                    }
                                </div>
                                
                                <div class="versus">VS</div>
                                
                                <div class="team-info text-center">
                                    <i class="fas fa-shield-alt fa-3x text-primary team-icon mb-2"></i>
                                    <h6 class="mb-0">@match.Team2</h6>
                                    @if (match.Status != "Upcoming")
                                    {
                                        <strong class="score">@match.Team2Score</strong>
                                    }
                                </div>
                            </div>
                            
                            <div class="mt-3 text-center">
                                <small class="text-muted">@match.Venue</small>
                                @if (!string.IsNullOrEmpty(match.Result))
                                {
                                    <p class="mb-0 mt-2 result-text">@match.Result</p>
                                }
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

<style>
    .match-card {
        transition: transform 0.2s;
    }
    
    .match-card:hover {
        transform: translateY(-5px);
    }
    
    .team-icon {
        width: 60px;
        height: 60px;
        display: flex;
        justify-content: center;
        align-items: center;
    }
    
    .versus {
        font-weight: bold;
        color: var(--bs-primary);
    }
    
    .score {
        font-size: 1.2rem;
        color: var(--bs-primary);
    }
    
    .result-text {
        font-style: italic;
        color: var(--bs-success);
    }
</style>

@code {
    private string selectedCategory = "upcoming";
    
    private List<Match> matches = new()
    {
        new Match
        {
            Team1 = "Islamabad United",
            Team2 = "Karachi Kings",
            Team1Logo = "images/teams/isb.png",
            Team2Logo = "images/teams/khi.png",
            DateTime = DateTime.Now.AddDays(2),
            Venue = "National Stadium, Karachi",
            Status = "Upcoming"
        },
        new Match
        {
            Team1 = "Lahore Qalandars",
            Team2 = "Multan Sultans",
            Team1Logo = "images/teams/lhe.png",
            Team2Logo = "images/teams/mul.png",
            DateTime = DateTime.Now,
            Venue = "Gaddafi Stadium, Lahore",
            Status = "Live",
            Team1Score = "156/4 (15.2)",
            Team2Score = "142/6 (15.2)"
        },
        new Match
        {
            Team1 = "Peshawar Zalmi",
            Team2 = "Quetta Gladiators",
            Team1Logo = "images/teams/psh.png",
            Team2Logo = "images/teams/qta.png",
            DateTime = DateTime.Now.AddDays(-1),
            Venue = "Rawalpindi Cricket Stadium",
            Status = "Completed",
            Team1Score = "185/7 (20)",
            Team2Score = "180/8 (20)",
            Result = "Peshawar Zalmi won by 5 runs"
        }
    };

    private IEnumerable<Match> GetFilteredMatches()
    {
        return matches.Where(m => m.Status.ToLower() == selectedCategory);
    }

    private string GetStatusBadgeClass(string status) => status.ToLower() switch
    {
        "live" => "bg-danger",
        "completed" => "bg-success",
        _ => "bg-primary"
    };

    private class Match
    {
        public string Team1 { get; set; } = "";
        public string Team2 { get; set; } = "";
        public string Team1Logo { get; set; } = "";
        public string Team2Logo { get; set; } = "";
        public DateTime DateTime { get; set; }
        public string Venue { get; set; } = "";
        public string Status { get; set; } = "";
        public string Team1Score { get; set; } = "";
        public string Team2Score { get; set; } = "";
        public string Result { get; set; } = "";
    }
} 